apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: elastic-agent-synthetics
  namespace: elastic-synthetic-monitoring
  labels:
    app.kubernetes.io/name: elastic-agent-synthetics
    app.kubernetes.io/component: monitoring-agent
    app.kubernetes.io/version: "8.11.0"
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: elastic-agent-synthetics
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elastic-agent-synthetics
        app.kubernetes.io/component: monitoring-agent
      annotations:
        co.elastic.logs/enabled: "true"
        co.elastic.logs/json.keys_under_root: "true"
        co.elastic.logs/json.add_error_key: "true"
        co.elastic.logs/json.message_key: "message"
    spec:
      serviceAccountName: elastic-agent
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
      - name: elastic-agent
        image: docker.elastic.co/beats/elastic-agent:8.11.0
        args:
          - -e
          - -c
          - /etc/elastic-agent/elastic-agent.yml
        env:
        - name: ELASTICSEARCH_URL
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: elasticsearch-url
        - name: ELASTICSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: elasticsearch-username
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: elasticsearch-password
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          runAsUser: 0
          capabilities:
            add:
              - NET_RAW
              - NET_ADMIN
              - SYS_ADMIN
        resources:
          limits:
            memory: 1Gi
            cpu: 1000m
          requests:
            memory: 512Mi
            cpu: 200m
        volumeMounts:
        - name: config
          mountPath: /etc/elastic-agent
          readOnly: true
        - name: data
          mountPath: /usr/share/elastic-agent/data
        - name: proc
          mountPath: /hostfs/proc
          readOnly: true
        - name: cgroup
          mountPath: /hostfs/sys/fs/cgroup
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: etc-full
          mountPath: /hostfs/etc
          readOnly: true
        - name: var-lib
          mountPath: /hostfs/var/lib
          readOnly: true
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              #!/bin/bash
              # Check if elastic-agent process is running
              if pgrep -f "elastic-agent" > /dev/null; then
                exit 0
              else
                exit 1
              fi
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              #!/bin/bash
              # Check if elastic-agent is ready to accept connections
              if [ -f /usr/share/elastic-agent/data/elastic-agent.pid ]; then
                exit 0
              else
                exit 1
              fi
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: elastic-agent-config
          defaultMode: 0600
      - name: data
        hostPath:
          path: /var/lib/elastic-agent-data
          type: DirectoryOrCreate
      - name: proc
        hostPath:
          path: /proc
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
      - name: etc-full
        hostPath:
          path: /etc
      - name: var-lib
        hostPath:
          path: /var/lib
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      - operator: Exists
        effect: NoSchedule
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
